name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 'BrowserStack Env Setup'
        uses: browserstack/github-actions/setup-env@master
        with:
          username:  ${{ secrets.BROWSERSTACK_USERNAME }}
          access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
            
      - name: 'Checkout the repository'
        uses: actions/checkout@v4

      - name: 'Running XCUIT test on App Automate'
        run:  |
                APP_STATUS_RESPONSE=$(curl -u ${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }} -X POST "https://api-cloud.browserstack.com/app-automate/xcuitest/v2/app" -F "file=@BrowserStack-SampleApp.ipa")
                export APP_URL=$(echo $APP_STATUS_RESPONSE | jq -r '.app_url')
                
                TEST_SUITE_RESPONSE=$(curl -u ${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }} -X POST "https://api-cloud.browserstack.com/app-automate/xcuitest/v2/test-suite" -F "file=@BrowserStack-SampleXCUITest-v2.zip")
                export TEST_SUITE_URL=$(echo $TEST_SUITE_RESPONSE | jq -r '.test_suite_url')

                BUILD_RESPONSE=$(curl -u ${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }} -X POST "https://api-cloud.browserstack.com/app-automate/xcuitest/v2/build" -d "{\"app\": \"$APP_URL\", \"testSuite\": \"$TEST_SUITE_URL\", \"devices\": [\"iPhone 15-17\"]}" -H "Content-Type: application/json")
                export BUILD_ID=$(echo $BUILD_RESPONSE | jq -r '.build_id')
              
                while true; do
                  BUILD_STATUS_RESPONSE=$(curl -u ${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }} -X GET "https://api-cloud.browserstack.com/app-automate/xcuitest/v2/builds/$BUILD_ID")
                  BUILD_STATUS=$(echo $BUILD_STATUS_RESPONSE | jq -c -r '.status')
                  if [ "$BUILD_STATUS" != "running" ]; then
                    break
                  fi
                  sleep 30
                done

                device_count=$(echo $BUILD_STATUS_RESPONSE | jq '.devices | length')
                for (( i=0; i<$device_count; i++ ))
                do
                  session_count=$(echo $BUILD_STATUS_RESPONSE | jq ".devices[$i].sessions | length")
                  for (( j=0; j<$session_count; j++ ))
                  do
                    BROWSERSTACK_SESSION_ID=$(echo $BUILD_STATUS_RESPONSE | jq -c -r ".devices[$i].sessions[$j].id")
                    SESSION_RESULTS=$(curl -u ${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }}  -X GET "https://api-cloud.browserstack.com/app-automate/xcuitest/v2/builds/$BUILD_ID/sessions/$BROWSERSTACK_SESSION_ID") 

                    testcase_count=$(echo $SESSION_RESULTS | jq '.testcases.data | length')
                    for (( k=0; k<$testcase_count; k++ ))
                    do
                      testcase_entry_count=$(echo $SESSION_RESULTS | jq ".testcases.data[$k].testcases | length")
                      for (( l=0; l<$testcase_entry_count; l++ ))
                      do
                        INSTRUMENTATION_LOG_URL=$(echo $SESSION_RESULTS | jq -c -r ".testcases.data[$k].testcases[$l].instrumentation_log")
                        INSTRUMENT_LOG_TEXT_RESULT=$(curl -u ${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }} $INSTRUMENTATION_LOG_URL)
                        echo "$INSTRUMENT_LOG_TEXT_RESULT" > ./instrument_log_text.txt

                        cat ./instrument_log_text.txt | xcpretty -r junit >> junit.xml
                      done
                    done
                  done
                done

                curl -k -X POST "https://test-management.browserstack.com/api/v1/import/results/xml/junit" -u ${{ secrets.TEST_MANAGEMENT_API_TOKEN }} -F project_name="TCM_Project_30_Update11" -F "file_path=@./junit.xml" -F test_run_name="TCM_TEST_RUN"
