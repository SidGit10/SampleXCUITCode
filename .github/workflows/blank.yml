# This is a basic workflow to help you get started with Actions
####
name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: 'BrowserStack Env Setup'  # Invokes the setup-env action
        uses: browserstack/github-actions/setup-env@master
        with:
          username:  ${{ secrets.BROWSERSTACK_USERNAME }}
          access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
            
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: 'Checkout the repository'
        uses: actions/checkout@v4

      - name: 'Running XCUIT test on App Automate'
        run:  |
                APP_STATUS_RESPONSE=$(curl -u ${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }} -X POST "https://api-cloud.browserstack.com/app-automate/xcuitest/v2/app" -F "file=@BrowserStack-SampleApp.ipa")
                echo "App URL Response: $APP_STATUS_RESPONSE"
                export APP_URL=$(echo $APP_STATUS_RESPONSE | jq -r '.app_url')
                echo $APP_URL

                TEST_SUITE_RESPONSE=$(curl -u ${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }} -X POST "https://api-cloud.browserstack.com/app-automate/xcuitest/v2/test-suite" -F "file=@BrowserStack-SampleXCUITest-v2.zip")
                echo "Test Suite Response: $TEST_SUITE_RESPONSE"
                export TEST_SUITE_URL=$(echo $TEST_SUITE_RESPONSE | jq -r '.test_suite_url')
                echo $TEST_SUITE_URL
                curl -u ${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }} -X POST "https://api-cloud.browserstack.com/app-automate/xcuitest/v2/build" -d "{\"app\": $(echo $APP_STATUS_RESPONSE | jq -r '.app_url'), \"testSuite\": $(echo $TEST_SUITE_RESPONSE | jq -r '.test_suite_url'), \"devices\": [\"iPhone 15-17\"]}" -H "Content-Type: application/json"


